{"ast":null,"code":"export default {\n  name: 'Login',\n  data: () => ({\n    activeTab: 0,\n    showPassword: false,\n    rememberMe: false,\n    // 登录表单\n    loginValid: true,\n    loginLoading: false,\n    loginError: null,\n    loginForm: {\n      username: '',\n      password: ''\n    },\n    // 注册表单\n    registerValid: true,\n    registerLoading: false,\n    registerError: null,\n    registerForm: {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    // 验证规则\n    usernameRules: [v => !!v || '用户名不能为空', v => v.length >= 3 || '用户名至少需要3个字符'],\n    passwordRules: [v => !!v || '密码不能为空', v => v.length >= 3 || '密码至少需要3个字符'],\n    emailRules: [v => !!v || '邮箱不能为空', v => /.+@.+\\..+/.test(v) || '请输入有效的邮箱地址']\n  }),\n  computed: {\n    passwordMatch() {\n      return () => this.registerForm.password === this.registerForm.confirmPassword || '两次输入的密码不一致';\n    }\n  },\n  methods: {\n    async login() {\n      if (!this.$refs.loginForm.validate()) return;\n      this.loginLoading = true;\n      this.loginError = null;\n      try {\n        // 模拟API调用\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        // 简单验证 - 实际应用中应该使用后端验证\n        if (this.loginForm.username === '123' && this.loginForm.password === '123') {\n          // 保存用户信息到本地存储\n          const userData = {\n            id: 1,\n            username: this.loginForm.username,\n            name: 'Adrian Tan',\n            title: 'Executive Director',\n            phone: '+65 1234 5678',\n            whatsapp: '+65 8765 4321',\n            email: 'adrian@andycasket.com',\n            address: 'Singapore'\n          };\n          localStorage.setItem('user', JSON.stringify(userData));\n\n          // 触发全局登录成功事件\n          this.$root.$emit('login-success', userData);\n\n          // 跳转到首页\n          this.$router.push('/');\n        } else {\n          this.loginError = 'Username or password is incorrect';\n        }\n      } catch (error) {\n        console.error('Login failed:', error);\n        this.loginError = 'Login failed, please try again later';\n      } finally {\n        this.loginLoading = false;\n      }\n    },\n    async register() {\n      if (!this.$refs.registerForm.validate()) return;\n      this.registerLoading = true;\n      this.registerError = null;\n      try {\n        // 模拟API调用\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        // 简单模拟注册 - 实际应用中应该使用后端API\n        const userData = {\n          id: 1,\n          username: this.registerForm.username,\n          email: this.registerForm.email,\n          name: 'New Agent',\n          title: 'Agent',\n          phone: '',\n          whatsapp: '',\n          email: this.registerForm.email,\n          address: 'Singapore'\n        };\n        localStorage.setItem('user', JSON.stringify(userData));\n\n        // 触发全局登录成功事件\n        this.$root.$emit('login-success', userData);\n\n        // 跳转到个人资料页面\n        this.$router.push('/profile');\n      } catch (error) {\n        console.error('Registration failed:', error);\n        this.registerError = 'Registration failed, please try again later';\n      } finally {\n        this.registerLoading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","activeTab","showPassword","rememberMe","loginValid","loginLoading","loginError","loginForm","username","password","registerValid","registerLoading","registerError","registerForm","email","confirmPassword","usernameRules","v","length","passwordRules","emailRules","test","computed","passwordMatch","methods","login","$refs","validate","Promise","resolve","setTimeout","userData","id","title","phone","whatsapp","address","localStorage","setItem","JSON","stringify","$root","$emit","$router","push","error","console","register"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\n  <div>\n    <v-container class=\"auth-container fill-height\">\n      <v-row justify=\"center\" align=\"center\">\n        <v-col cols=\"12\" sm=\"8\" md=\"6\" lg=\"4\">\n          <v-card class=\"auth-card\" elevation=\"10\">\n            <v-tabs v-model=\"activeTab\" grow>\n              <v-tab key=\"login\">Login</v-tab>\n              <v-tab key=\"register\">Register</v-tab>\n            </v-tabs>\n            \n            <v-tabs-items v-model=\"activeTab\">\n              <!-- 登录表单 -->\n              <v-tab-item key=\"login\">\n                <v-card flat>\n                  <v-card-text>\n                    <v-form ref=\"loginForm\" v-model=\"loginValid\" lazy-validation>\n                      <v-text-field\n                        v-model=\"loginForm.username\"\n                        label=\"Username\"\n                        prepend-icon=\"mdi-account\"\n                        :rules=\"usernameRules\"\n                        required\n                      ></v-text-field>\n                      \n                      <v-text-field\n                        v-model=\"loginForm.password\"\n                        label=\"Password\"\n                        prepend-icon=\"mdi-lock\"\n                        :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n                        :type=\"showPassword ? 'text' : 'password'\"\n                        @click:append=\"showPassword = !showPassword\"\n                        :rules=\"passwordRules\"\n                        required\n                      ></v-text-field>\n                      \n                      <v-alert\n                        v-if=\"loginError\"\n                        type=\"error\"\n                        dismissible\n                        class=\"mt-4\"\n                      >\n                        {{ loginError }}\n                      </v-alert>\n                      \n                      <div class=\"d-flex justify-space-between align-center mt-4\">\n                        <v-checkbox\n                          v-model=\"rememberMe\"\n                          label=\"Remember me\"\n                          color=\"primary\"\n                          hide-details\n                        ></v-checkbox>\n                        <v-btn text color=\"primary\">Forgot password?</v-btn>\n                      </div>\n                      \n                      <v-btn\n                        color=\"primary\"\n                        block\n                        large\n                        class=\"mt-4\"\n                        :loading=\"loginLoading\"\n                        :disabled=\"!loginValid\"\n                        @click=\"login\"\n                      >\n                        Login\n                      </v-btn>\n                    </v-form>\n                  </v-card-text>\n                </v-card>\n              </v-tab-item>\n              \n              <!-- 注册表单 -->\n              <v-tab-item key=\"register\">\n                <v-card flat>\n                  <v-card-text>\n                    <v-form ref=\"registerForm\" v-model=\"registerValid\" lazy-validation>\n                      <v-text-field\n                        v-model=\"registerForm.username\"\n                        label=\"Username\"\n                        prepend-icon=\"mdi-account\"\n                        :rules=\"usernameRules\"\n                        required\n                      ></v-text-field>\n                      \n                      <v-text-field\n                        v-model=\"registerForm.email\"\n                        label=\"Email\"\n                        prepend-icon=\"mdi-email\"\n                        :rules=\"emailRules\"\n                        required\n                      ></v-text-field>\n                      \n                      <v-text-field\n                        v-model=\"registerForm.password\"\n                        label=\"Password\"\n                        prepend-icon=\"mdi-lock\"\n                        :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n                        :type=\"showPassword ? 'text' : 'password'\"\n                        @click:append=\"showPassword = !showPassword\"\n                        :rules=\"passwordRules\"\n                        required\n                      ></v-text-field>\n                      \n                      <v-text-field\n                        v-model=\"registerForm.confirmPassword\"\n                        label=\"Confirm Password\"\n                        prepend-icon=\"mdi-lock-check\"\n                        :type=\"showPassword ? 'text' : 'password'\"\n                        :rules=\"[...passwordRules, passwordMatch]\"\n                        required\n                      ></v-text-field>\n                      \n                      <v-alert\n                        v-if=\"registerError\"\n                        type=\"error\"\n                        dismissible\n                        class=\"mt-4\"\n                      >\n                        {{ registerError }}\n                      </v-alert>\n                      \n                      <v-btn\n                        color=\"primary\"\n                        block\n                        large\n                        class=\"mt-4\"\n                        :loading=\"registerLoading\"\n                        :disabled=\"!registerValid\"\n                        @click=\"register\"\n                      >\n                        Register\n                      </v-btn>\n                    </v-form>\n                  </v-card-text>\n                </v-card>\n              </v-tab-item>\n            </v-tabs-items>\n            \n            <v-divider class=\"mt-4\"></v-divider>\n            \n            <v-card-actions class=\"justify-center pa-4\">\n              <v-btn text color=\"primary\" to=\"/\">\n                <v-icon left>mdi-home</v-icon>\n                Back to Home\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Login',\n  data: () => ({\n    activeTab: 0,\n    showPassword: false,\n    rememberMe: false,\n    \n    // 登录表单\n    loginValid: true,\n    loginLoading: false,\n    loginError: null,\n    loginForm: {\n      username: '',\n      password: ''\n    },\n    \n    // 注册表单\n    registerValid: true,\n    registerLoading: false,\n    registerError: null,\n    registerForm: {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    \n    // 验证规则\n    usernameRules: [\n      v => !!v || '用户名不能为空',\n      v => v.length >= 3 || '用户名至少需要3个字符'\n    ],\n    passwordRules: [\n      v => !!v || '密码不能为空',\n      v => v.length >= 3 || '密码至少需要3个字符'\n    ],\n    emailRules: [\n      v => !!v || '邮箱不能为空',\n      v => /.+@.+\\..+/.test(v) || '请输入有效的邮箱地址'\n    ]\n  }),\n  computed: {\n    passwordMatch() {\n      return () => this.registerForm.password === this.registerForm.confirmPassword || '两次输入的密码不一致'\n    }\n  },\n  methods: {\n    async login() {\n      if (!this.$refs.loginForm.validate()) return\n      \n      this.loginLoading = true\n      this.loginError = null\n      \n      try {\n        // 模拟API调用\n        await new Promise(resolve => setTimeout(resolve, 1000))\n        \n        // 简单验证 - 实际应用中应该使用后端验证\n        if (this.loginForm.username === '123' && this.loginForm.password === '123') {\n          // 保存用户信息到本地存储\n          const userData = {\n            id: 1,\n            username: this.loginForm.username,\n            name: 'Adrian Tan',\n            title: 'Executive Director',\n            phone: '+65 1234 5678',\n            whatsapp: '+65 8765 4321',\n            email: 'adrian@andycasket.com',\n            address: 'Singapore'\n          }\n          \n          localStorage.setItem('user', JSON.stringify(userData))\n          \n          // 触发全局登录成功事件\n          this.$root.$emit('login-success', userData)\n          \n          // 跳转到首页\n          this.$router.push('/')\n        } else {\n          this.loginError = 'Username or password is incorrect'\n        }\n      } catch (error) {\n        console.error('Login failed:', error)\n        this.loginError = 'Login failed, please try again later'\n      } finally {\n        this.loginLoading = false\n      }\n    },\n    \n    async register() {\n      if (!this.$refs.registerForm.validate()) return\n      \n      this.registerLoading = true\n      this.registerError = null\n      \n      try {\n        // 模拟API调用\n        await new Promise(resolve => setTimeout(resolve, 1000))\n        \n        // 简单模拟注册 - 实际应用中应该使用后端API\n        const userData = {\n          id: 1,\n          username: this.registerForm.username,\n          email: this.registerForm.email,\n          name: 'New Agent',\n          title: 'Agent',\n          phone: '',\n          whatsapp: '',\n          email: this.registerForm.email,\n          address: 'Singapore'\n        }\n        \n        localStorage.setItem('user', JSON.stringify(userData))\n        \n        // 触发全局登录成功事件\n        this.$root.$emit('login-success', userData)\n        \n        // 跳转到个人资料页面\n        this.$router.push('/profile')\n      } catch (error) {\n        console.error('Registration failed:', error)\n        this.registerError = 'Registration failed, please try again later'\n      } finally {\n        this.registerLoading = false\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.auth-container {\n  min-height: calc(100vh - 200px);\n}\n\n.auth-card {\n  border-radius: 16px;\n  overflow: hidden;\n}\n</style> "],"mappings":"AA0JA;EACAA,IAAA;EACAC,IAAA,EAAAA,CAAA;IACAC,SAAA;IACAC,YAAA;IACAC,UAAA;IAEA;IACAC,UAAA;IACAC,YAAA;IACAC,UAAA;IACAC,SAAA;MACAC,QAAA;MACAC,QAAA;IACA;IAEA;IACAC,aAAA;IACAC,eAAA;IACAC,aAAA;IACAC,YAAA;MACAL,QAAA;MACAM,KAAA;MACAL,QAAA;MACAM,eAAA;IACA;IAEA;IACAC,aAAA,GACAC,CAAA,MAAAA,CAAA,eACAA,CAAA,IAAAA,CAAA,CAAAC,MAAA,uBACA;IACAC,aAAA,GACAF,CAAA,MAAAA,CAAA,cACAA,CAAA,IAAAA,CAAA,CAAAC,MAAA,sBACA;IACAE,UAAA,GACAH,CAAA,MAAAA,CAAA,cACAA,CAAA,gBAAAI,IAAA,CAAAJ,CAAA;EAEA;EACAK,QAAA;IACAC,cAAA;MACA,kBAAAV,YAAA,CAAAJ,QAAA,UAAAI,YAAA,CAAAE,eAAA;IACA;EACA;EACAS,OAAA;IACA,MAAAC,MAAA;MACA,UAAAC,KAAA,CAAAnB,SAAA,CAAAoB,QAAA;MAEA,KAAAtB,YAAA;MACA,KAAAC,UAAA;MAEA;QACA;QACA,UAAAsB,OAAA,CAAAC,OAAA,IAAAC,UAAA,CAAAD,OAAA;;QAEA;QACA,SAAAtB,SAAA,CAAAC,QAAA,mBAAAD,SAAA,CAAAE,QAAA;UACA;UACA,MAAAsB,QAAA;YACAC,EAAA;YACAxB,QAAA,OAAAD,SAAA,CAAAC,QAAA;YACAT,IAAA;YACAkC,KAAA;YACAC,KAAA;YACAC,QAAA;YACArB,KAAA;YACAsB,OAAA;UACA;UAEAC,YAAA,CAAAC,OAAA,SAAAC,IAAA,CAAAC,SAAA,CAAAT,QAAA;;UAEA;UACA,KAAAU,KAAA,CAAAC,KAAA,kBAAAX,QAAA;;UAEA;UACA,KAAAY,OAAA,CAAAC,IAAA;QACA;UACA,KAAAtC,UAAA;QACA;MACA,SAAAuC,KAAA;QACAC,OAAA,CAAAD,KAAA,kBAAAA,KAAA;QACA,KAAAvC,UAAA;MACA;QACA,KAAAD,YAAA;MACA;IACA;IAEA,MAAA0C,SAAA;MACA,UAAArB,KAAA,CAAAb,YAAA,CAAAc,QAAA;MAEA,KAAAhB,eAAA;MACA,KAAAC,aAAA;MAEA;QACA;QACA,UAAAgB,OAAA,CAAAC,OAAA,IAAAC,UAAA,CAAAD,OAAA;;QAEA;QACA,MAAAE,QAAA;UACAC,EAAA;UACAxB,QAAA,OAAAK,YAAA,CAAAL,QAAA;UACAM,KAAA,OAAAD,YAAA,CAAAC,KAAA;UACAf,IAAA;UACAkC,KAAA;UACAC,KAAA;UACAC,QAAA;UACArB,KAAA,OAAAD,YAAA,CAAAC,KAAA;UACAsB,OAAA;QACA;QAEAC,YAAA,CAAAC,OAAA,SAAAC,IAAA,CAAAC,SAAA,CAAAT,QAAA;;QAEA;QACA,KAAAU,KAAA,CAAAC,KAAA,kBAAAX,QAAA;;QAEA;QACA,KAAAY,OAAA,CAAAC,IAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,yBAAAA,KAAA;QACA,KAAAjC,aAAA;MACA;QACA,KAAAD,eAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}