{"ast":null,"code":"export default {\n  name: 'Login',\n  data: () => ({\n    tab: 0,\n    showPassword: false,\n    loading: false,\n    loginValid: true,\n    registerValid: true,\n    loginError: null,\n    registerSuccess: false,\n    loginForm: {\n      email: '',\n      password: ''\n    },\n    registerForm: {\n      name: '',\n      title: '',\n      phone: '',\n      whatsapp: '',\n      email: '',\n      password: '',\n      address: ''\n    },\n    nameRules: [v => !!v || 'Name is required'],\n    titleRules: [v => !!v || 'Job title is required'],\n    emailRules: [v => !!v || 'Email is required', v => /.+@.+\\..+/.test(v) || 'Email must be valid'],\n    passwordRules: [v => !!v || 'Password is required', v => v.length >= 6 || 'Password must be at least 6 characters'],\n    phoneRules: [v => !!v || 'Phone number is required'],\n    addressRules: [v => !!v || 'Address is required']\n  }),\n  methods: {\n    async login() {\n      if (this.$refs.loginForm.validate()) {\n        this.loading = true;\n        this.loginError = null;\n        try {\n          // 使用本地存储模拟登录\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          const savedUser = localStorage.getItem('user');\n          if (savedUser) {\n            const userData = JSON.parse(savedUser);\n            if (userData.email === this.loginForm.email && userData.password === this.loginForm.password) {\n              // 设置登录状态\n              localStorage.setItem('isLoggedIn', 'true');\n\n              // 跳转到 Agent 页面\n              this.$router.push('/agent');\n              return;\n            }\n          }\n          this.loginError = 'Invalid email or password';\n        } catch (error) {\n          console.error('Login failed:', error);\n          this.loginError = 'Login failed. Please try again.';\n        } finally {\n          this.loading = false;\n        }\n      }\n    },\n    async register() {\n      if (this.$refs.registerForm.validate()) {\n        this.loading = true;\n        this.registerSuccess = false;\n        try {\n          // 使用本地存储模拟注册\n          await new Promise(resolve => setTimeout(resolve, 1000));\n\n          // 保存用户数据\n          localStorage.setItem('user', JSON.stringify(this.registerForm));\n\n          // 显示成功消息\n          this.registerSuccess = true;\n\n          // 重置表单\n          this.$refs.registerForm.reset();\n\n          // 切换到登录选项卡\n          this.tab = 0;\n        } catch (error) {\n          console.error('Registration failed:', error);\n        } finally {\n          this.loading = false;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","tab","showPassword","loading","loginValid","registerValid","loginError","registerSuccess","loginForm","email","password","registerForm","title","phone","whatsapp","address","nameRules","v","titleRules","emailRules","test","passwordRules","length","phoneRules","addressRules","methods","login","$refs","validate","Promise","resolve","setTimeout","savedUser","localStorage","getItem","userData","JSON","parse","setItem","$router","push","error","console","register","stringify","reset"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\n  <div>\n    <v-container class=\"fill-height\">\n      <v-row align=\"center\" justify=\"center\">\n        <v-col cols=\"12\" sm=\"8\" md=\"6\" lg=\"4\">\n          <v-card class=\"elevation-12\">\n            <v-tabs v-model=\"tab\" grow>\n              <v-tab>Login</v-tab>\n              <v-tab>Register</v-tab>\n            </v-tabs>\n\n            <v-tabs-items v-model=\"tab\">\n              <!-- 登录表单 -->\n              <v-tab-item>\n                <v-card flat>\n                  <v-card-text>\n                    <v-form ref=\"loginForm\" v-model=\"loginValid\" lazy-validation>\n                      <v-text-field\n                        v-model=\"loginForm.email\"\n                        label=\"Email\"\n                        prepend-icon=\"mdi-email\"\n                        :rules=\"emailRules\"\n                        required\n                      ></v-text-field>\n\n                      <v-text-field\n                        v-model=\"loginForm.password\"\n                        label=\"Password\"\n                        prepend-icon=\"mdi-lock\"\n                        :type=\"showPassword ? 'text' : 'password'\"\n                        :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n                        @click:append=\"showPassword = !showPassword\"\n                        :rules=\"passwordRules\"\n                        required\n                      ></v-text-field>\n                    </v-form>\n                    <v-alert\n                      v-if=\"loginError\"\n                      type=\"error\"\n                      dense\n                      dismissible\n                      class=\"mt-3\"\n                    >\n                      {{ loginError }}\n                    </v-alert>\n                  </v-card-text>\n                  <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn\n                      color=\"primary\"\n                      :loading=\"loading\"\n                      :disabled=\"!loginValid\"\n                      @click=\"login\"\n                    >\n                      Login\n                    </v-btn>\n                  </v-card-actions>\n                </v-card>\n              </v-tab-item>\n\n              <!-- 注册表单 -->\n              <v-tab-item>\n                <v-card flat>\n                  <v-card-text>\n                    <v-form ref=\"registerForm\" v-model=\"registerValid\" lazy-validation>\n                      <v-text-field\n                        v-model=\"registerForm.name\"\n                        label=\"Full Name\"\n                        prepend-icon=\"mdi-account\"\n                        :rules=\"nameRules\"\n                        required\n                      ></v-text-field>\n\n                      <v-text-field\n                        v-model=\"registerForm.title\"\n                        label=\"Job Title\"\n                        prepend-icon=\"mdi-badge-account\"\n                        :rules=\"titleRules\"\n                        required\n                      ></v-text-field>\n\n                      <v-text-field\n                        v-model=\"registerForm.phone\"\n                        label=\"Phone\"\n                        prepend-icon=\"mdi-phone\"\n                        :rules=\"phoneRules\"\n                        required\n                      ></v-text-field>\n\n                      <v-text-field\n                        v-model=\"registerForm.whatsapp\"\n                        label=\"WhatsApp\"\n                        prepend-icon=\"mdi-whatsapp\"\n                        :rules=\"phoneRules\"\n                        required\n                      ></v-text-field>\n\n                      <v-text-field\n                        v-model=\"registerForm.email\"\n                        label=\"Email\"\n                        prepend-icon=\"mdi-email\"\n                        :rules=\"emailRules\"\n                        required\n                      ></v-text-field>\n\n                      <v-text-field\n                        v-model=\"registerForm.password\"\n                        label=\"Password\"\n                        prepend-icon=\"mdi-lock\"\n                        :type=\"showPassword ? 'text' : 'password'\"\n                        :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n                        @click:append=\"showPassword = !showPassword\"\n                        :rules=\"passwordRules\"\n                        required\n                      ></v-text-field>\n\n                      <v-text-field\n                        v-model=\"registerForm.address\"\n                        label=\"Address\"\n                        prepend-icon=\"mdi-map-marker\"\n                        :rules=\"addressRules\"\n                        required\n                      ></v-text-field>\n                    </v-form>\n                    <v-alert\n                      v-if=\"registerSuccess\"\n                      type=\"success\"\n                      dense\n                      dismissible\n                      class=\"mt-3\"\n                    >\n                      Registration successful! You can now login.\n                    </v-alert>\n                  </v-card-text>\n                  <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn\n                      color=\"primary\"\n                      :loading=\"loading\"\n                      :disabled=\"!registerValid\"\n                      @click=\"register\"\n                    >\n                      Register\n                    </v-btn>\n                  </v-card-actions>\n                </v-card>\n              </v-tab-item>\n            </v-tabs-items>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Login',\n  data: () => ({\n    tab: 0,\n    showPassword: false,\n    loading: false,\n    loginValid: true,\n    registerValid: true,\n    loginError: null,\n    registerSuccess: false,\n    loginForm: {\n      email: '',\n      password: ''\n    },\n    registerForm: {\n      name: '',\n      title: '',\n      phone: '',\n      whatsapp: '',\n      email: '',\n      password: '',\n      address: ''\n    },\n    nameRules: [\n      v => !!v || 'Name is required'\n    ],\n    titleRules: [\n      v => !!v || 'Job title is required'\n    ],\n    emailRules: [\n      v => !!v || 'Email is required',\n      v => /.+@.+\\..+/.test(v) || 'Email must be valid'\n    ],\n    passwordRules: [\n      v => !!v || 'Password is required',\n      v => v.length >= 6 || 'Password must be at least 6 characters'\n    ],\n    phoneRules: [\n      v => !!v || 'Phone number is required'\n    ],\n    addressRules: [\n      v => !!v || 'Address is required'\n    ]\n  }),\n  methods: {\n    async login() {\n      if (this.$refs.loginForm.validate()) {\n        this.loading = true;\n        this.loginError = null;\n        \n        try {\n          // 使用本地存储模拟登录\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          \n          const savedUser = localStorage.getItem('user');\n          if (savedUser) {\n            const userData = JSON.parse(savedUser);\n            if (userData.email === this.loginForm.email && \n                userData.password === this.loginForm.password) {\n              \n              // 设置登录状态\n              localStorage.setItem('isLoggedIn', 'true');\n              \n              // 跳转到 Agent 页面\n              this.$router.push('/agent');\n              return;\n            }\n          }\n          \n          this.loginError = 'Invalid email or password';\n        } catch (error) {\n          console.error('Login failed:', error);\n          this.loginError = 'Login failed. Please try again.';\n        } finally {\n          this.loading = false;\n        }\n      }\n    },\n    \n    async register() {\n      if (this.$refs.registerForm.validate()) {\n        this.loading = true;\n        this.registerSuccess = false;\n        \n        try {\n          // 使用本地存储模拟注册\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          \n          // 保存用户数据\n          localStorage.setItem('user', JSON.stringify(this.registerForm));\n          \n          // 显示成功消息\n          this.registerSuccess = true;\n          \n          // 重置表单\n          this.$refs.registerForm.reset();\n          \n          // 切换到登录选项卡\n          this.tab = 0;\n        } catch (error) {\n          console.error('Registration failed:', error);\n        } finally {\n          this.loading = false;\n        }\n      }\n    }\n  }\n}\n</script> "],"mappings":"AA4JA;EACAA,IAAA;EACAC,IAAA,EAAAA,CAAA;IACAC,GAAA;IACAC,YAAA;IACAC,OAAA;IACAC,UAAA;IACAC,aAAA;IACAC,UAAA;IACAC,eAAA;IACAC,SAAA;MACAC,KAAA;MACAC,QAAA;IACA;IACAC,YAAA;MACAZ,IAAA;MACAa,KAAA;MACAC,KAAA;MACAC,QAAA;MACAL,KAAA;MACAC,QAAA;MACAK,OAAA;IACA;IACAC,SAAA,GACAC,CAAA,MAAAA,CAAA,uBACA;IACAC,UAAA,GACAD,CAAA,MAAAA,CAAA,4BACA;IACAE,UAAA,GACAF,CAAA,MAAAA,CAAA,yBACAA,CAAA,gBAAAG,IAAA,CAAAH,CAAA,2BACA;IACAI,aAAA,GACAJ,CAAA,MAAAA,CAAA,4BACAA,CAAA,IAAAA,CAAA,CAAAK,MAAA,kDACA;IACAC,UAAA,GACAN,CAAA,MAAAA,CAAA,+BACA;IACAO,YAAA,GACAP,CAAA,MAAAA,CAAA;EAEA;EACAQ,OAAA;IACA,MAAAC,MAAA;MACA,SAAAC,KAAA,CAAAnB,SAAA,CAAAoB,QAAA;QACA,KAAAzB,OAAA;QACA,KAAAG,UAAA;QAEA;UACA;UACA,UAAAuB,OAAA,CAAAC,OAAA,IAAAC,UAAA,CAAAD,OAAA;UAEA,MAAAE,SAAA,GAAAC,YAAA,CAAAC,OAAA;UACA,IAAAF,SAAA;YACA,MAAAG,QAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAL,SAAA;YACA,IAAAG,QAAA,CAAA1B,KAAA,UAAAD,SAAA,CAAAC,KAAA,IACA0B,QAAA,CAAAzB,QAAA,UAAAF,SAAA,CAAAE,QAAA;cAEA;cACAuB,YAAA,CAAAK,OAAA;;cAEA;cACA,KAAAC,OAAA,CAAAC,IAAA;cACA;YACA;UACA;UAEA,KAAAlC,UAAA;QACA,SAAAmC,KAAA;UACAC,OAAA,CAAAD,KAAA,kBAAAA,KAAA;UACA,KAAAnC,UAAA;QACA;UACA,KAAAH,OAAA;QACA;MACA;IACA;IAEA,MAAAwC,SAAA;MACA,SAAAhB,KAAA,CAAAhB,YAAA,CAAAiB,QAAA;QACA,KAAAzB,OAAA;QACA,KAAAI,eAAA;QAEA;UACA;UACA,UAAAsB,OAAA,CAAAC,OAAA,IAAAC,UAAA,CAAAD,OAAA;;UAEA;UACAG,YAAA,CAAAK,OAAA,SAAAF,IAAA,CAAAQ,SAAA,MAAAjC,YAAA;;UAEA;UACA,KAAAJ,eAAA;;UAEA;UACA,KAAAoB,KAAA,CAAAhB,YAAA,CAAAkC,KAAA;;UAEA;UACA,KAAA5C,GAAA;QACA,SAAAwC,KAAA;UACAC,OAAA,CAAAD,KAAA,yBAAAA,KAAA;QACA;UACA,KAAAtC,OAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}