{"ast":null,"code":"// import QRCode from 'qrcode'\n\nexport default {\n  name: 'Agent',\n  data: () => ({\n    valid: true,\n    loading: false,\n    shareDialog: false,\n    qrDialog: false,\n    agent: {\n      name: 'Adrian Tan',\n      title: 'Executive Director',\n      phone: '+65 1234 5678',\n      whatsapp: '+65 8765 4321',\n      email: 'adrian@andycasket.com',\n      address: 'Singapore',\n      contacts: [{\n        icon: 'mdi-phone',\n        value: '+65 1234 5678'\n      }, {\n        icon: 'mdi-whatsapp',\n        value: '+65 8765 4321'\n      }, {\n        icon: 'mdi-email',\n        value: 'adrian@andycasket.com'\n      }, {\n        icon: 'mdi-map-marker',\n        value: 'Singapore'\n      }]\n    },\n    message: {\n      name: '',\n      phone: '',\n      email: '',\n      content: ''\n    },\n    nameRules: [v => !!v || 'Name is required'],\n    phoneRules: [v => !!v || 'Phone number is required'],\n    emailRules: [v => !!v || 'Email is required', v => /.+@.+\\..+/.test(v) || 'Email must be valid'],\n    messageRules: [v => !!v || 'Message is required'],\n    shareActions: [{\n      icon: 'mdi-card-account-details-outline',\n      text: 'Save Contact',\n      color: 'primary',\n      action: 'downloadVCard'\n    }, {\n      icon: 'mdi-share-variant-outline',\n      text: 'Share Card',\n      color: 'accent',\n      action: 'shareCard'\n    }, {\n      icon: 'mdi-message-text-outline',\n      text: 'WhatsApp',\n      color: 'success',\n      action: 'shareOnWhatsApp'\n    }]\n  }),\n  methods: {\n    async submitMessage() {\n      if (this.$refs.form.validate()) {\n        this.loading = true;\n        try {\n          // 这里添加发送消息的逻辑\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          this.$refs.form.reset();\n          alert('Message sent successfully!');\n        } catch (error) {\n          console.error('Error sending message:', error);\n          alert('Failed to send message. Please try again.');\n        } finally {\n          this.loading = false;\n        }\n      }\n    },\n    generateVCard() {\n      return `BEGIN:VCARD\nVERSION:3.0\nFN:${this.agent.name}\nTITLE:${this.agent.title}\nTEL;TYPE=WORK,VOICE:${this.agent.phone}\nTEL;TYPE=WORK,WHATSAPP:${this.agent.whatsapp}\nEMAIL;TYPE=WORK:${this.agent.email}\nADR;TYPE=WORK:;;${this.agent.address}\nORG:Andy Casket Service\nURL:${window.location.origin}/agent\nEND:VCARD`;\n    },\n    async downloadVCard() {\n      const vcard = this.generateVCard();\n      const blob = new Blob([vcard], {\n        type: 'text/vcard'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `${this.agent.name}.vcf`);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    },\n    shareOnWhatsApp() {\n      const text = `Contact Card - ${this.agent.name}\\n${window.location.href}`;\n      window.open(`https://wa.me/?text=${encodeURIComponent(text)}`);\n    },\n    shareCard() {\n      this.shareDialog = true;\n    },\n    async copyLink() {\n      try {\n        await navigator.clipboard.writeText(window.location.href);\n        this.$emit('show-message', 'Link copied to clipboard!');\n        this.shareDialog = false;\n      } catch (err) {\n        console.error('Failed to copy:', err);\n      }\n    },\n    shareByEmail() {\n      const subject = `Contact Card - ${this.agent.name}`;\n      const body = `Here's my contact information:\\n\\n${window.location.href}`;\n      window.location.href = `mailto:?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\n      this.shareDialog = false;\n    },\n    // async generateQRCode() {\n    //   this.shareDialog = false\n    //   this.qrDialog = true\n    //   await this.$nextTick()\n    //   const canvas = this.$refs.qrCanvas\n    //   await QRCode.toCanvas(canvas, window.location.href, {\n    //     width: 300,\n    //     margin: 2,\n    //     color: {\n    //       dark: '#000000',\n    //       light: '#ffffff'\n    //     }\n    //   })\n    // },\n\n    downloadQR() {\n      const canvas = this.$refs.qrCanvas;\n      const link = document.createElement('a');\n      link.download = `${this.agent.name}-QR.png`;\n      link.href = canvas.toDataURL('image/png');\n      link.click();\n    }\n  }\n};","map":{"version":3,"names":["name","data","valid","loading","shareDialog","qrDialog","agent","title","phone","whatsapp","email","address","contacts","icon","value","message","content","nameRules","v","phoneRules","emailRules","test","messageRules","shareActions","text","color","action","methods","submitMessage","$refs","form","validate","Promise","resolve","setTimeout","reset","alert","error","console","generateVCard","window","location","origin","downloadVCard","vcard","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","shareOnWhatsApp","open","encodeURIComponent","shareCard","copyLink","navigator","clipboard","writeText","$emit","err","shareByEmail","subject","downloadQR","canvas","qrCanvas","download","toDataURL"],"sources":["src/views/Agent.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 名片页面标题区 -->\n    <v-parallax\n      :src=\"require('@/assets/background.jpg') || 'https://picsum.photos/1920/1080?random=3'\"\n      height=\"300\"\n      class=\"page-header\"\n    >\n      <div class=\"overlay\"></div>\n      <v-container class=\"fill-height\">\n        <v-row align=\"center\" justify=\"center\">\n          <v-col cols=\"12\" md=\"8\" class=\"text-center\">\n            <h1 class=\"text-h2 font-weight-bold white--text mb-4\">Contact Us</h1>\n            <p class=\"text-h6 white--text\">Available 24/7 for your needs</p>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-parallax>\n\n    <v-container class=\"namecard-container mt-n10\">\n      <v-row justify=\"center\">\n        <v-col cols=\"12\" md=\"10\">\n          <v-card class=\"namecard-wrapper\" elevation=\"10\">\n            <v-row no-gutters>\n              <!-- 左侧个人信息 -->\n              <v-col cols=\"12\" md=\"4\" class=\"primary\">\n                <div class=\"profile-section pa-6 white--text\">\n                  <v-avatar size=\"180\" class=\"mb-6 profile-avatar\">\n                    <v-icon size=\"120\" color=\"white\">mdi-account-circle</v-icon>\n                  </v-avatar>\n                  <h2 class=\"text-h4 font-weight-bold mb-2\">{{ agent.name }}</h2>\n                  <p class=\"text-h6 mb-6\">{{ agent.title }}</p>\n                  <v-divider dark class=\"mb-6\"></v-divider>\n                  <div class=\"contact-info\">\n                    <div v-for=\"(contact, index) in agent.contacts\" :key=\"index\" class=\"mb-4\">\n                      <v-icon dark class=\"mr-3\">{{ contact.icon }}</v-icon>\n                      <span>{{ contact.value }}</span>\n                    </div>\n                  </div>\n                </div>\n              </v-col>\n\n              <!-- 右侧联系表单 -->\n              <v-col cols=\"12\" md=\"8\">\n                <div class=\"contact-form pa-6\">\n                  <h3 class=\"text-h5 mb-6\">Send us a message</h3>\n                  <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                    <v-row>\n                      <v-col cols=\"12\" md=\"6\">\n                        <v-text-field\n                          v-model=\"message.name\"\n                          label=\"Your Name\"\n                          :rules=\"nameRules\"\n                          outlined\n                          dense\n                        ></v-text-field>\n                      </v-col>\n                      <v-col cols=\"12\" md=\"6\">\n                        <v-text-field\n                          v-model=\"message.phone\"\n                          label=\"Phone Number\"\n                          :rules=\"phoneRules\"\n                          outlined\n                          dense\n                        ></v-text-field>\n                      </v-col>\n                    </v-row>\n                    <v-text-field\n                      v-model=\"message.email\"\n                      label=\"Email Address\"\n                      :rules=\"emailRules\"\n                      outlined\n                      dense\n                    ></v-text-field>\n                    <v-textarea\n                      v-model=\"message.content\"\n                      label=\"Message\"\n                      :rules=\"messageRules\"\n                      outlined\n                      rows=\"4\"\n                    ></v-textarea>\n                    <v-btn\n                      color=\"primary\"\n                      :loading=\"loading\"\n                      :disabled=\"!valid\"\n                      @click=\"submitMessage\"\n                      x-large\n                      block\n                      class=\"mt-4\"\n                    >\n                      Send Message\n                    </v-btn>\n                  </v-form>\n                </div>\n              </v-col>\n            </v-row>\n\n            <!-- 重新设计分享按钮组 -->\n            <v-row class=\"share-section px-6 py-4\" justify=\"center\">\n              <v-col cols=\"auto\" v-for=\"(action, i) in shareActions\" :key=\"i\">\n                <v-btn\n                  :color=\"action.color\"\n                  class=\"share-btn mx-2\"\n                  elevation=\"2\"\n                  @click=\"action.action\"\n                  large\n                >\n                  <v-icon left size=\"24\">{{ action.icon }}</v-icon>\n                  {{ action.text }}\n                </v-btn>\n              </v-col>\n            </v-row>\n          </v-card>\n        </v-col>\n      </v-row>\n\n      <!-- 分享对话框 -->\n      <v-dialog v-model=\"shareDialog\" max-width=\"500\">\n        <v-card>\n          <v-card-title class=\"headline\">Share Contact Card</v-card-title>\n          <v-card-text>\n            <v-list>\n              <v-list-item @click=\"copyLink\">\n                <v-list-item-icon>\n                  <v-icon>mdi-content-copy</v-icon>\n                </v-list-item-icon>\n                <v-list-item-content>\n                  <v-list-item-title>Copy Direct Link</v-list-item-title>\n                </v-list-item-content>\n              </v-list-item>\n              <v-list-item @click=\"shareByEmail\">\n                <v-list-item-icon>\n                  <v-icon>mdi-email</v-icon>\n                </v-list-item-icon>\n                <v-list-item-content>\n                  <v-list-item-title>Share via Email</v-list-item-title>\n                </v-list-item-content>\n              </v-list-item>\n              <v-list-item @click=\"generateQRCode\">\n                <v-list-item-icon>\n                  <v-icon>mdi-qrcode</v-icon>\n                </v-list-item-icon>\n                <v-list-item-content>\n                  <v-list-item-title>Show QR Code</v-list-item-title>\n                </v-list-item-content>\n              </v-list-item>\n            </v-list>\n          </v-card-text>\n        </v-card>\n      </v-dialog>\n\n      <!-- QR码对话框 -->\n      <v-dialog v-model=\"qrDialog\" max-width=\"400\">\n        <v-card class=\"text-center pa-6\">\n          <v-card-title class=\"justify-center\">Scan QR Code</v-card-title>\n          <div class=\"qr-container my-4\">\n            <canvas ref=\"qrCanvas\"></canvas>\n          </div>\n          <v-btn\n            color=\"primary\"\n            @click=\"downloadQR\"\n            class=\"mt-4\"\n          >\n            <v-icon left>mdi-download</v-icon>\n            Save QR Code\n          </v-btn>\n        </v-card>\n      </v-dialog>\n    </v-container>\n  </div>\n</template>\n\n<script>\n// import QRCode from 'qrcode'\n\nexport default {\n  name: 'Agent',\n  data: () => ({\n    valid: true,\n    loading: false,\n    shareDialog: false,\n    qrDialog: false,\n    agent: {\n      name: 'Adrian Tan',\n      title: 'Executive Director',\n      phone: '+65 1234 5678',\n      whatsapp: '+65 8765 4321',\n      email: 'adrian@andycasket.com',\n      address: 'Singapore',\n      contacts: [\n        { icon: 'mdi-phone', value: '+65 1234 5678' },\n        { icon: 'mdi-whatsapp', value: '+65 8765 4321' },\n        { icon: 'mdi-email', value: 'adrian@andycasket.com' },\n        { icon: 'mdi-map-marker', value: 'Singapore' }\n      ]\n    },\n    message: {\n      name: '',\n      phone: '',\n      email: '',\n      content: ''\n    },\n    nameRules: [v => !!v || 'Name is required'],\n    phoneRules: [v => !!v || 'Phone number is required'],\n    emailRules: [\n      v => !!v || 'Email is required',\n      v => /.+@.+\\..+/.test(v) || 'Email must be valid'\n    ],\n    messageRules: [v => !!v || 'Message is required'],\n    shareActions: [\n      { \n        icon: 'mdi-card-account-details-outline', \n        text: 'Save Contact',\n        color: 'primary',\n        action: 'downloadVCard'\n      },\n      { \n        icon: 'mdi-share-variant-outline', \n        text: 'Share Card',\n        color: 'accent',\n        action: 'shareCard'\n      },\n      { \n        icon: 'mdi-message-text-outline', \n        text: 'WhatsApp',\n        color: 'success',\n        action: 'shareOnWhatsApp'\n      }\n    ]\n  }),\n  methods: {\n    async submitMessage() {\n      if (this.$refs.form.validate()) {\n        this.loading = true;\n        try {\n          // 这里添加发送消息的逻辑\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          this.$refs.form.reset();\n          alert('Message sent successfully!');\n        } catch (error) {\n          console.error('Error sending message:', error);\n          alert('Failed to send message. Please try again.');\n        } finally {\n          this.loading = false;\n        }\n      }\n    },\n    generateVCard() {\n      return `BEGIN:VCARD\nVERSION:3.0\nFN:${this.agent.name}\nTITLE:${this.agent.title}\nTEL;TYPE=WORK,VOICE:${this.agent.phone}\nTEL;TYPE=WORK,WHATSAPP:${this.agent.whatsapp}\nEMAIL;TYPE=WORK:${this.agent.email}\nADR;TYPE=WORK:;;${this.agent.address}\nORG:Andy Casket Service\nURL:${window.location.origin}/agent\nEND:VCARD`\n    },\n    \n    async downloadVCard() {\n      const vcard = this.generateVCard()\n      const blob = new Blob([vcard], { type: 'text/vcard' })\n      const url = window.URL.createObjectURL(blob)\n      const link = document.createElement('a')\n      link.href = url\n      link.setAttribute('download', `${this.agent.name}.vcf`)\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n    },\n\n    shareOnWhatsApp() {\n      const text = `Contact Card - ${this.agent.name}\\n${window.location.href}`\n      window.open(`https://wa.me/?text=${encodeURIComponent(text)}`)\n    },\n\n    shareCard() {\n      this.shareDialog = true\n    },\n\n    async copyLink() {\n      try {\n        await navigator.clipboard.writeText(window.location.href)\n        this.$emit('show-message', 'Link copied to clipboard!')\n        this.shareDialog = false\n      } catch (err) {\n        console.error('Failed to copy:', err)\n      }\n    },\n\n    shareByEmail() {\n      const subject = `Contact Card - ${this.agent.name}`\n      const body = `Here's my contact information:\\n\\n${window.location.href}`\n      window.location.href = `mailto:?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`\n      this.shareDialog = false\n    },\n\n    // async generateQRCode() {\n    //   this.shareDialog = false\n    //   this.qrDialog = true\n    //   await this.$nextTick()\n    //   const canvas = this.$refs.qrCanvas\n    //   await QRCode.toCanvas(canvas, window.location.href, {\n    //     width: 300,\n    //     margin: 2,\n    //     color: {\n    //       dark: '#000000',\n    //       light: '#ffffff'\n    //     }\n    //   })\n    // },\n\n    downloadQR() {\n      const canvas = this.$refs.qrCanvas\n      const link = document.createElement('a')\n      link.download = `${this.agent.name}-QR.png`\n      link.href = canvas.toDataURL('image/png')\n      link.click()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.page-header {\n  position: relative;\n}\n\n.overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(rgba(0,0,0,0.4), rgba(0,0,0,0.7));\n}\n\n.namecard-container {\n  position: relative;\n}\n\n.namecard-wrapper {\n  border-radius: 16px;\n  overflow: hidden;\n  box-shadow: 0 15px 30px rgba(0,0,0,0.1);\n}\n\n.profile-section {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  background: linear-gradient(135deg, var(--v-primary-base), var(--v-secondary-base));\n}\n\n.contact-info {\n  width: 100%;\n  text-align: left;\n}\n\n.contact-form {\n  background: white;\n  height: 100%;\n}\n\n.share-section {\n  background: linear-gradient(to right, rgba(0,0,0,0.02), transparent);\n  border-top: 1px solid rgba(0,0,0,0.05);\n}\n\n.share-btn {\n  min-width: 160px;\n  height: 48px;\n  transition: all 0.3s ease;\n  text-transform: none;\n  letter-spacing: 0.5px;\n}\n\n.share-btn:hover {\n  transform: translateY(-2px);\n}\n\n.share-btn .v-icon {\n  transition: all 0.3s ease;\n}\n\n.share-btn:hover .v-icon {\n  transform: scale(1.1);\n}\n\n@media (max-width: 960px) {\n  .namecard-container {\n    margin-top: -60px;\n  }\n  \n  .profile-section {\n    padding: 40px 20px;\n  }\n\n  .share-section {\n    flex-direction: column;\n    align-items: stretch;\n    padding: 16px !important;\n  }\n  \n  .share-btn {\n    width: 100%;\n    margin: 8px 0 !important;\n  }\n}\n\n.profile-avatar {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.qr-container {\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}